name: "Deploy to GitHub Pages"

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:

  build:
    name: "Build GitHub Pages site"

    permissions:
      contents: read

    runs-on: ubuntu-latest
    steps:

      - name: "Checkout ${{ github.ref }} branch in ${{ github.repository }} repository."
        uses: actions/checkout@v3

      - name: "Setup Ruby"
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          cache-version: 0 # Increment this number if you need to re-download cached gems.

      - name: "Setup Pages"
        id: pages
        uses: actions/configure-pages@v3

      - name: "Build with Jekyll"
        run: bundle exec jekyll build --trace --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production

      - name: "Upload artifact"
        uses: actions/upload-pages-artifact@v2
        with:
          path: _site/


  deploy:
    name: "Deploy GitHub Pages site"
    if: github.event_name == 'push'
    needs:
      - build

    permissions:
      pages: write
      id-token: write

    environment:
      name: github-pages-test
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    steps:
      - name: "Deploy to GitHub Pages"
        id: deployment
        uses: actions/deploy-pages@v2
        with:
          error_count: 0


  cache:
    name: "Build GitHub Pages site reference"
    if: (github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'no-content-change')) || github.event_name == 'push'

    permissions:
      contents: read

    runs-on: ubuntu-latest
    steps:

      - name: "Calculate relevant SHA"
        id: params
        run:
          echo "sha=${{ github.event.pull_request.base.sha || github.event.push.after }}" >> $GITHUB_OUTPUT

      - name: "Verify cache exists"
        id: cache
        uses: actions/cache/restore@v3
        with:
          key: github-pages-main-${{ steps.params.outputs.sha }}
          path: '*'
          lookup-only: true
        # If yes (steps.cache.outputs.cache-hit == 'true'), then skip the rest of the steps.

      - name: "Checkout ${{ steps.params.outputs.sha }} commit in ${{ github.repository }} repository."
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.params.outputs.sha }}

      - name: "Patch main"
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          echo '2.7.8' > .ruby-version
          cat > ci.patch << EOF
          Index: _config.yml
          ===================================================================
          diff --git a/_config.yml b/_config.yml
          --- a/_config.yml	(revision f3a7628350dae347fa0f2db3a332e5f004b86b55)
          +++ b/_config.yml	(revision 2efdc41e41f9d9d363ceb7306158dc69568b145e)
          @@ -116,6 +116,8 @@
             - gradlew.bat
             - Gemfile
             - Gemfile.lock
          +  # Workaround for GitHub actions Ruby action vs Jekyll v3.x
          +  - vendor/bundle
             # _config*.yml      # doesn't work, see https://github.com/jekyll/jekyll-watch/issues/34
             - _config_local.yml # need to explicitly exclude all configs https://github.com/jekyll/jekyll-watch/issues/35
             - _config_dev.yml   # need to explicitly exclude all configs https://github.com/jekyll/jekyll-watch/issues/35
          
          EOF
          git apply ci.patch

      - name: "Setup Ruby."
        if: steps.cache.outputs.cache-hit != 'true'
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          cache-version: 0 # Increment this number if you need to re-download cached gems.

      - name: "Retrieve GitHub Pages configuration."
        if: steps.cache.outputs.cache-hit != 'true'
        id: pages
        uses: actions/configure-pages@v3

      - name: "Build _site with Jekyll."
        if: steps.cache.outputs.cache-hit != 'true'
        run: bundle exec jekyll build --trace --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production

      - name: "Upload 'cached _site' artifact."
        if: steps.cache.outputs.cache-hit != 'true' && (success() || failure())
        uses: actions/upload-artifact@v3
        with:
          name: 'cached _site'
          path: _site/

      - name: "Store _site to cache."
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        with:
          key: github-pages-${{ steps.params.outputs.sha }}
          path: _site/


  diff:
    name: "Verify against reference build"
    if: github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'no-content-change')
    needs:
      - build
      - cache

    runs-on: ubuntu-latest
    steps:

      - name: "Load the cached base reference."
        id: cache
        uses: actions/cache/restore@v3
        with:
          key: github-pages-${{ github.event.pull_request.base.sha }}
          path: _site
      
      - name: "Prepare cached base for diffing."
        if: steps.cache.outputs.cache-hit == 'true'
        run: mv _site github-pages-base

      - name: "Download just-built reference."
        if: steps.cache.outputs.cache-hit != 'true'
        uses: actions/download-artifact@v3
        with:
          name: cached _site
          path: github-pages-base

      - name: "Download just-built artifact."
        uses: actions/download-artifact@v3
        with:
          name: github-pages
          path: github-pages-head

      - name: "Prepare head for diffing."
        working-directory: github-pages-head
        run: tar -xf artifact.tar && rm artifact.tar

      - name: "Display structure of downloaded files"
        run: ls -R

      - name: "Diff head against base."
        run: diff --recursive github-pages-base github-pages-head
